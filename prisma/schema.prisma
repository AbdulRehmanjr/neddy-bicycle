generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  accountId String @id @default(uuid())
  email     String @unique
  password  String
}

model PayPalBoookingInfo {
  paypalBoookingId String         @id @default(uuid())
  paymentEmail     String         @default("none")
  captureId        String
  payerId          String         @default("none")
  paymentId        String         @default("none")
  contactEmail     String         @default("none")
  BikeBookings     BikeBookings[]
}

model PayPalInfo {
  id                String @id @default(uuid())
  trackingId        String @unique
  merchantId        String
  partner_client_id String
  email             String @unique
}

model BikeBookings {
  bikeBookingId String             @id @default(uuid())
  firstName     String
  lastName      String
  email         String
  phone         String
  guesthouse    String             @default("none")
  arrivalTime   String             @default("none")
  startDate     String
  endDate       String
  duration      Int                @default(0)
  amount        Int
  kids          Int
  men           Int
  ladies        Int
  pickup        Int
  addtional     String             @default("none")
  info          String             @default("none")
  isRefund      Boolean            @default(false)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @default(now())
  payPal        PayPalBoookingInfo @relation(fields: [payPalId], references: [paypalBoookingId], onDelete: Cascade)
  payPalId      String
}

model Calendars {
  calendarId   String @id @default(uuid())
  refreshToken String
  platform     String
}
